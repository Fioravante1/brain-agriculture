#!/bin/bash

# Brain Agriculture - Setup Script
# Este script configura o ambiente de desenvolvimento

set -e

# Obter o diret√≥rio do script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_ROOT="$( cd "$SCRIPT_DIR/.." && pwd )"

# Mudar para o diret√≥rio raiz do projeto
cd "$PROJECT_ROOT"

echo "üåæ Brain Agriculture - Setup Script"
echo "===================================="
echo ""

# Fun√ß√£o para verificar se um comando existe
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Verificar Docker
if command_exists docker; then
    echo "‚úÖ Docker encontrado: $(docker --version)"
else
    echo "‚ùå Docker n√£o encontrado. Por favor, instale o Docker."
    exit 1
fi

# Verificar Docker Compose
if command_exists docker-compose; then
    echo "‚úÖ Docker Compose encontrado: $(docker-compose --version)"
elif docker compose version >/dev/null 2>&1; then
    echo "‚úÖ Docker Compose (plugin) encontrado"
    DOCKER_COMPOSE="docker compose"
else
    echo "‚ùå Docker Compose n√£o encontrado. Por favor, instale o Docker Compose."
    exit 1
fi

# Definir comando do Docker Compose
DOCKER_COMPOSE=${DOCKER_COMPOSE:-docker-compose}

echo ""
echo "üìã Escolha o modo de execu√ß√£o:"
echo "1) Produ√ß√£o (build otimizado)"
echo "2) Desenvolvimento"
read -p "Op√ß√£o (1 ou 2): " mode

case $mode in
    1)
        echo ""
        echo "üöÄ Iniciando em modo PRODU√á√ÉO..."
        $DOCKER_COMPOSE up --build
        ;;
    2)
        echo ""
        echo "üîß Iniciando em modo DESENVOLVIMENTO..."
        $DOCKER_COMPOSE -f docker-compose.dev.yml up --build
        ;;
    *)
        echo "‚ùå Op√ß√£o inv√°lida"
        exit 1
        ;;
esac
