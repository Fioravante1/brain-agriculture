version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: brain-agriculture-db
    environment:
      POSTGRES_DB: brain_agriculture
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - brain-agriculture-network

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: brain-agriculture-app
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/brain_agriculture
      NODE_ENV: production
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - brain-agriculture-network
    restart: unless-stopped
    command: >
      sh -c "
        echo '⏳ Aguardando banco de dados...' &&
        sleep 5 &&
        echo '📦 Gerando cliente Prisma...' &&
        npx prisma generate &&
        echo '🗄️  Aplicando schema ao banco...' &&
        npx prisma db push --skip-generate &&
        echo '🌱 Populando banco (se vazio)...' &&
        npx prisma db seed &&
        echo '🚀 Iniciando aplicação...' &&
        node server.js
      "

volumes:
  postgres_data:

networks:
  brain-agriculture-network:
    driver: bridge
